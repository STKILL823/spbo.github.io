<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CSS Color Palette | GitHub</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        :root {
            --primary: #6a11cb;
            --secondary: #2575fc;
            --dark: #1a1a2e;
            --darker: #16213e;
            --light: #f0f0f0;
            --gray: #b0b0b0;
        }
        
        body {
            background: linear-gradient(135deg, var(--dark) 0%, var(--darker) 100%);
            color: var(--light);
            min-height: 100vh;
            padding-bottom: 50px;
        }
        
        .container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 0 20px;
        }
        
        /* Шапка */
        header {
            background: rgba(0, 0, 0, 0.3);
            backdrop-filter: blur(10px);
            padding: 20px 0;
            position: sticky;
            top: 0;
            z-index: 100;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        }
        
        .header-content {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .logo {
            display: flex;
            align-items: center;
            gap: 10px;
        }
        
        .logo h1 {
            font-size: 24px;
            font-weight: 700;
            background: linear-gradient(90deg, var(--primary) 0%, var(--secondary) 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }
        
        .logo-icon {
            font-size: 28px;
            color: var(--primary);
        }
        
        nav ul {
            display: flex;
            list-style: none;
            gap: 25px;
        }
        
        nav a {
            color: var(--light);
            text-decoration: none;
            font-weight: 500;
            transition: color 0.3s;
            position: relative;
        }
        
        nav a:hover {
            color: var(--primary);
        }
        
        nav a::after {
            content: '';
            position: absolute;
            bottom: -5px;
            left: 0;
            width: 0;
            height: 2px;
            background: var(--primary);
            transition: width 0.3s;
        }
        
        nav a:hover::after {
            width: 100%;
        }
        
        /* Герой секция */
        .hero {
            text-align: center;
            padding: 80px 0 50px;
        }
        
        .hero h2 {
            font-size: 42px;
            margin-bottom: 20px;
            background: linear-gradient(90deg, var(--primary) 0%, var(--secondary) 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }
        
        .hero p {
            font-size: 18px;
            max-width: 700px;
            margin: 0 auto 30px;
            line-height: 1.6;
            color: var(--gray);
        }
        
        .search-box {
            max-width: 500px;
            margin: 0 auto;
            position: relative;
        }
        
        .search-box input {
            width: 100%;
            padding: 15px 20px;
            border-radius: 50px;
            border: none;
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            color: white;
            font-size: 16px;
            outline: none;
            transition: all 0.3s;
        }
        
        .search-box input:focus {
            background: rgba(255, 255, 255, 0.15);
            box-shadow: 0 0 0 2px var(--primary);
        }
        
        .search-box i {
            position: absolute;
            right: 20px;
            top: 50%;
            transform: translateY(-50%);
            color: var(--gray);
        }
        
        /* Фильтры */
        .filters {
            display: flex;
            justify-content: center;
            flex-wrap: wrap;
            gap: 15px;
            margin: 30px 0;
        }
        
        .filter-btn {
            padding: 10px 20px;
            border: none;
            border-radius: 30px;
            background: rgba(255, 255, 255, 0.1);
            color: var(--light);
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s;
        }
        
        .filter-btn:hover {
            background: rgba(255, 255, 255, 0.2);
        }
        
        .filter-btn.active {
            background: linear-gradient(90deg, var(--primary) 0%, var(--secondary) 100%);
            box-shadow: 0 4px 15px rgba(106, 17, 203, 0.4);
        }
        
        /* Палитра цветов */
        .colors-section {
            padding: 30px 0;
        }
        
        .section-title {
            font-size: 32px;
            margin-bottom: 30px;
            text-align: center;
            position: relative;
        }
        
        .section-title::after {
            content: '';
            position: absolute;
            bottom: -10px;
            left: 50%;
            transform: translateX(-50%);
            width: 80px;
            height: 3px;
            background: linear-gradient(90deg, var(--primary) 0%, var(--secondary) 100%);
            border-radius: 3px;
        }
        
        .colors-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            gap: 20px;
        }
        
        .color-card {
            background: rgba(255, 255, 255, 0.05);
            border-radius: 12px;
            overflow: hidden;
            transition: transform 0.3s, box-shadow 0.3s;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        }
        
        .color-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.3);
        }
        
        .color-preview {
            height: 120px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 16px;
            font-weight: 600;
        }
        
        .color-info {
            padding: 15px;
        }
        
        .color-name {
            font-size: 16px;
            margin-bottom: 10px;
            font-weight: 600;
        }
        
        .color-code {
            display: flex;
            align-items: center;
            gap: 10px;
            background: rgba(0, 0, 0, 0.2);
            padding: 8px 12px;
            border-radius: 6px;
            font-family: monospace;
            font-size: 14px;
            cursor: pointer;
            transition: background 0.3s;
        }
        
        .color-code:hover {
            background: rgba(0, 0, 0, 0.3);
        }
        
        .copy-icon {
            margin-left: auto;
            color: var(--gray);
            transition: color 0.3s;
        }
        
        .color-code:hover .copy-icon {
            color: white;
        }
        
        /* Подвал */
        footer {
            background: rgba(0, 0, 0, 0.3);
            padding: 30px 0;
            margin-top: 50px;
            text-align: center;
            border-top: 1px solid rgba(255, 255, 255, 0.1);
        }
        
        .footer-content {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 20px;
        }
        
        .github-link {
            display: flex;
            align-items: center;
            gap: 10px;
            color: var(--light);
            text-decoration: none;
            font-weight: 500;
            transition: color 0.3s;
        }
        
        .github-link:hover {
            color: var(--primary);
        }
        
        .copyright {
            color: var(--gray);
            font-size: 14px;
        }
        
        /* Адаптивность */
        @media (max-width: 768px) {
            .header-content {
                flex-direction: column;
                gap: 15px;
            }
            
            nav ul {
                gap: 15px;
            }
            
            .hero h2 {
                font-size: 32px;
            }
            
            .colors-grid {
                grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
            }
        }
        
        @media (max-width: 480px) {
            .hero h2 {
                font-size: 28px;
            }
            
            .colors-grid {
                grid-template-columns: repeat(auto-fill, minmax(130px, 1fr));
            }
            
            .filters {
                gap: 10px;
            }
            
            .filter-btn {
                padding: 8px 15px;
                font-size: 14px;
            }
        }
    </style>
</head>
<body>
    <header>
        <div class="container">
            <div class="header-content">
                <div class="logo">
                    <div class="logo-icon"><i class="fas fa-palette"></i></div>
                    <h1>CSS Colors</h1>
                </div>
                <nav>
                    <ul>
                        <li><a href="#"><i class="fas fa-home"></i> Главная</a></li>
                        <li><a href="#"><i class="fas fa-star"></i> Избранное</a></li>
                        <li><a href="#"><i class="fas fa-info-circle"></i> О проекте</a></li>
                    </ul>
                </nav>
            </div>
        </div>
    </header>
    
    <section class="hero">
        <div class="container">
            <h2>Обширная палитра CSS цветов</h2>
            <p>Найдите идеальные цвета для вашего следующего веб-проекта. Копируйте коды цветов одним кликом и используйте их в CSS.</p>
            <div class="search-box">
                <input type="text" id="search-input" placeholder="Поиск цвета...">
                <i class="fas fa-search"></i>
            </div>
        </div>
    </section>
    
    <div class="container">
        <div class="filters" id="filters-container">
            <!-- Кнопки фильтров будут добавлены через JavaScript -->
        </div>
        
        <section class="colors-section">
            <h3 class="section-title">Палитра цветов</h3>
            <div class="colors-grid" id="colors-container">
                <!-- Цвета будут добавлены через JavaScript -->
            </div>
        </section>
    </div>
    
    <footer>
        <div class="container">
            <div class="footer-content">
                <a href="https://github.com" class="github-link" target="_blank">
                    <i class="fab fa-github"></i>
                    <span>GitHub Repository</span>
                </a>
                <p class="copyright">© 2023 CSS Color Palette. Все права защищены.</p>
            </div>
        </div>
    </footer>

    <script>
        // Расширенный массив с цветами по категориям
        const colorCategories = {
            "reds": [
                { name: "Алый", code: "#FF2400" },
                { name: "Киноварь", code: "#E34234" },
                { name: "Кармин", code: "#960018" },
                { name: "Бордовый", code: "#800000" },
                { name: "Темно-красный", code: "#8B0000" },
                { name: "Огненно-кирпичный", code: "#B22222" },
                { name: "Коралловый", code: "#FF7F50" },
                { name: "Лососевый", code: "#FA8072" },
                { name: "Светло-коралловый", code: "#F08080" },
                { name: "Индийский красный", code: "#CD5C5C" }
            ],
            "oranges": [
                { name: "Оранжевый", code: "#FFA500" },
                { name: "Темно-оранжевый", code: "#FF8C00" },
                { name: "Коралловый", code: "#FF7F50" },
                { name: "Томатный", code: "#FF6347" },
                { name: "Оранжево-красный", code: "#FF4500" },
                { name: "Мандариновый", code: "#F28500" },
                { name: "Персиковый", code: "#FFE5B4" },
                { name: "Абрикосовый", code: "#FBCEB1" },
                { name: "Морковный", code: "#ED9121" },
                { name: "Жженый апельсин", code: "#CC5500" }
            ],
            "yellows": [
                { name: "Желтый", code: "#FFFF00" },
                { name: "Золотой", code: "#FFD700" },
                { name: "Лимонный", code: "#FFF44F" },
                { name: "Светло-желтый", code: "#FFFFE0" },
                { name: "Кукурузный", code: "#FBEC5D" },
                { name: "Шафрановый", code: "#F4C430" },
                { name: "Песочный", code: "#F4A460" },
                { name: "Льняной", code: "#EEDC82" },
                { name: "Горчичный", code: "#FFDB58" },
                { name: "Янтарный", code: "#FFBF00" }
            ],
            "greens": [
                { name: "Зеленый", code: "#008000" },
                { name: "Лаймовый", code: "#00FF00" },
                { name: "Лесной зеленый", code: "#228B22" },
                { name: "Морской зеленый", code: "#2E8B57" },
                { name: "Оливковый", code: "#808000" },
                { name: "Изумрудный", code: "#50C878" },
                { name: "Мятный", code: "#98FF98" },
                { name: "Шартрез", code: "#7FFF00" },
                { name: "Весенне-зеленый", code: "#00FF7F" },
                { name: "Папоротниковый", code: "#4F7942" }
            ],
            "blues": [
                { name: "Синий", code: "#0000FF" },
                { name: "Голубой", code: "#87CEEB" },
                { name: "Темно-синий", code: "#00008B" },
                { name: "Небесно-голубой", code: "#87CEEB" },
                { name: "Стальной синий", code: "#4682B4" },
                { name: "Королевский синий", code: "#4169E1" },
                { name: "Лазурный", code: "#007FFF" },
                { name: "Бирюзовый", code: "#40E0D0" },
                { name: "Аквамариновый", code: "#7FFFD4" },
                { name: "Сине-фиолетовый", code: "#8A2BE2" }
            ],
            "purples": [
                { name: "Фиолетовый", code: "#8B00FF" },
                { name: "Пурпурный", code: "#E0B0FF" },
                { name: "Темно-фиолетовый", code: "#9400D3" },
                { name: "Индиго", code: "#4B0082" },
                { name: "Сливовый", code: "#DDA0DD" },
                { name: "Орхидея", code: "#DA70D6" },
                { name: "Лавандовый", code: "#E6E6FA" },
                { name: "Аметистовый", code: "#9966CC" },
                { name: "Глициниевый", code: "#C9A0DC" },
                { name: "Сиреневый", code: "#C8A2C8" }
            ],
            "pinks": [
                { name: "Розовый", code: "#FFC0CB" },
                { name: "Светло-розовый", code: "#FFB6C1" },
                { name: "Глубокий розовый", code: "#FF1493" },
                { name: "Нежно-розовый", code: "#FFD1DC" },
                { name: "Фуксия", code: "#FF00FF" },
                { name: "Пурпурный", code: "#E0B0FF" },
                { name: "Клубничный", code: "#FC5A8D" },
                { name: "Малиновый", code: "#DC143C" },
                { name: "Кораллово-розовый", code: "#F88379" },
                { name: "Розово-лавандовый", code: "#FFF0F5" }
            ],
            "browns": [
                { name: "Коричневый", code: "#A52A2A" },
                { name: "Шоколадный", code: "#D2691E" },
                { name: "Песочно-коричневый", code: "#F4A460" },
                { name: "Рыжевато-коричневый", code: "#CD853F" },
                { name: "Каштановый", code: "#954535" },
                { name: "Красное дерево", code: "#C04000" },
                { name: "Бежевый", code: "#F5F5DC" },
                { name: "Загар", code: "#D2B48C" },
                { name: "Пшеничный", code: "#F5DEB3" },
                { name: "Персиковый пух", code: "#FFDAB9" }
            ],
            "grays": [
                { name: "Серый", code: "#808080" },
                { name: "Темно-серый", code: "#A9A9A9" },
                { name: "Светло-серый", code: "#D3D3D3" },
                { name: "Серебряный", code: "#C0C0C0" },
                { name: "Белый дым", code: "#F5F5F5" },
                { name: "Призрачно-белый", code: "#F8F8FF" },
                { name: "Антично-белый", code: "#FAEBD7" },
                { name: "Белый навахо", code: "#FFDEAD" },
                { name: "Мокасиновый", code: "#FFE4B5" },
                { name: "Льняной", code: "#FAF0E6" }
            ]
        };
        
        // Функция для определения контрастного цвета текста
        function getContrastColor(hexColor) {
            const r = parseInt(hexColor.substr(1, 2), 16);
            const g = parseInt(hexColor.substr(3, 2), 16);
            const b = parseInt(hexColor.substr(5, 2), 16);
            const brightness = (r * 299 + g * 587 + b * 114) / 1000;
            return brightness > 128 ? '#000000' : '#FFFFFF';
        }
        
        // Функция для создания карточки цвета
        function createColorCard(color) {
            const card = document.createElement('div');
            card.className = 'color-card';
            
            const textColor = getContrastColor(color.code);
            
            card.innerHTML = `
                <div class="color-preview" style="background-color: ${color.code}; color: ${textColor}">
                    ${color.name}
                </div>
                <div class="color-info">
                    <div class="color-name">${color.name}</div>
                    <div class="color-code" data-code="${color.code}">
                        <span>${color.code}</span>
                        <div class="copy-icon"><i class="far fa-copy"></i></div>
                    </div>
                </div>
            `;
            
            return card;
        }
        
        // Функция для отображения всех цветов
        function renderColors(category = 'all') {
            const container = document.getElementById('colors-container');
            container.innerHTML = '';
            
            let colorsToRender = [];
            
            if (category === 'all') {
                // Показать все цвета из всех категорий
                for (const cat in colorCategories) {
                    colorsToRender = colorsToRender.concat(colorCategories[cat]);
                }
            } else {
                // Показать цвета только из выбранной категории
                colorsToRender = colorCategories[category];
            }
            
            colorsToRender.forEach(color => {
                const card = createColorCard(color);
                container.appendChild(card);
            });
            
            // Добавляем обработчики событий для копирования
            document.querySelectorAll('.color-code').forEach(element => {
                element.addEventListener('click', function() {
                    const code = this.getAttribute('data-code');
                    navigator.clipboard.writeText(code).then(() => {
                        const originalText = this.querySelector('span').textContent;
                        const originalIcon = this.querySelector('.copy-icon').innerHTML;
                        
                        this.querySelector('span').textContent = 'Скопировано!';
                        this.querySelector('.copy-icon').innerHTML = '<i class="fas fa-check"></i>';
                        
                        setTimeout(() => {
                            this.querySelector('span').textContent = originalText;
                            this.querySelector('.copy-icon').innerHTML = originalIcon;
                        }, 2000);
                    });
                });
            });
        }
        
        // Функция для создания кнопок фильтров
        function setupFilters() {
            const filtersContainer = document.getElementById('filters-container');
            
            // Создаем кнопку "Все"
            const allButton = document.createElement('button');
            allButton.className = 'filter-btn active';
            allButton.textContent = 'Все';
            allButton.setAttribute('data-category', 'all');
            filtersContainer.appendChild(allButton);
            
            // Создаем кнопки для каждой категории
            for (const category in colorCategories) {
                const button = document.createElement('button');
                button.className = 'filter-btn';
                button.textContent = getCategoryName(category);
                button.setAttribute('data-category', category);
                filtersContainer.appendChild(button);
            }
            
            // Добавляем обработчики событий для кнопок фильтров
            document.querySelectorAll('.filter-btn').forEach(button => {
                button.addEventListener('click', function() {
                    // Убираем активный класс у всех кнопок
                    document.querySelectorAll('.filter-btn').forEach(btn => {
                        btn.classList.remove('active');
                    });
                    
                    // Добавляем активный класс к нажатой кнопке
                    this.classList.add('active');
                    
                    // Получаем категорию и отображаем соответствующие цвета
                    const category = this.getAttribute('data-category');
                    renderColors(category);
                });
            });
        }
        
        // Функция для получения читаемого названия категории
        function getCategoryName(category) {
            const names = {
                'reds': 'Красные',
                'oranges': 'Оранжевые',
                'yellows': 'Желтые',
                'greens': 'Зеленые',
                'blues': 'Синие',
                'purples': 'Фиолетовые',
                'pinks': 'Розовые',
                'browns': 'Коричневые',
                'grays': 'Серые'
            };
            
            return names[category] || category;
        }
        
        // Функция для поиска цветов
        function setupSearch() {
            const searchInput = document.getElementById('search-input');
            
            searchInput.addEventListener('input', function() {
                const searchTerm = this.value.toLowerCase();
                const activeCategory = document.querySelector('.filter-btn.active').getAttribute('data-category');
                
                let colorsToSearch = [];
                
                if (activeCategory === 'all') {
                    for (const cat in colorCategories) {
                        colorsToSearch = colorsToSearch.concat(colorCategories[cat]);
                    }
                } else {
                    colorsToSearch = colorCategories[activeCategory];
                }
                
                const filteredColors = colorsToSearch.filter(color => 
                    color.name.toLowerCase().includes(searchTerm) || 
                    color.code.toLowerCase().includes(searchTerm)
                );
                
                const container = document.getElementById('colors-container');
                container.innerHTML = '';
                
                filteredColors.forEach(color => {
                    const card = createColorCard(color);
                    container.appendChild(card);
                });
                
                // Обновляем обработчики событий для отфильтрованных элементов
                document.querySelectorAll('.color-code').forEach(element => {
                    element.addEventListener('click', function() {
                        const code = this.getAttribute('data-code');
                        navigator.clipboard.writeText(code).then(() => {
                            const originalText = this.querySelector('span').textContent;
                            const originalIcon = this.querySelector('.copy-icon').innerHTML;
                            
                            this.querySelector('span').textContent = 'Скопировано!';
                            this.querySelector('.copy-icon').innerHTML = '<i class="fas fa-check"></i>';
                            
                            setTimeout(() => {
                                this.querySelector('span').textContent = originalText;
                                this.querySelector('.copy-icon').innerHTML = originalIcon;
                            }, 2000);
                        });
                    });
                });
            });
        }
        
        // Инициализация при загрузке страницы
        document.addEventListener('DOMContentLoaded', function() {
            setupFilters();
            renderColors();
            setupSearch();
        });
    </script>
</body>
</html>
